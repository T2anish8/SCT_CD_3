import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
df = pd.read_csv("C:\\Users\\Tanish Agarwal\\Downloads\\archive (1)\\bank.csv")
print(df.head())
print(df.info())
le = LabelEncoder()
for col in df.columns:
    if df[col].dtype == 'object':
        df[col] = le.fit_transform(df[col])
X = df.drop("deposit", axis=1)
y = df["deposit"]
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.3, random_state=42, stratify=y
)
clf = DecisionTreeClassifier(criterion="entropy", max_depth=5, random_state=42)
clf.fit(X_train, y_train)
y_pred = clf.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
plt.figure(figsize=(6,4))
sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='d', cmap="Greens")
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix")
plt.show()
plt.figure(figsize=(20,10))
plt.set_cmap("RdYlGn")   
plot_tree(
    clf, 
    feature_names=X.columns, 
    class_names=["No", "Yes"], 
    filled=True, 
    rounded=True,
    fontsize=10
)
plt.title("Decision Tree Classifier", fontsize=16, fontweight="bold")
plt.show()
